name: Run Tests

on:
  pull_request:

jobs:
  build-and-test-with-conan:
    name: Build and Test with Conan
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        gcc: [ 8, 9, 10, 11 ]
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.gcc }}
          platform: x64

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Setup Conan
        uses: ./.github/actions/setup-conan
        with:
          artifactory_api_key: ${{ secrets.ARTIFACTORY_API_KEY }}
          artifactory_repo: ${{ vars.ARTIFACTORY_REPO_URL }}
          artifactory_user: ${{ secrets.ARTIFACTORY_API_USER }}

      - name: Run Tests
        uses: ./.github/actions/run-tests

  build-and-test-without-conan:
    name: Build and Test without Conan
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        gcc: [ 8, 9, 10, 11 ]
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.gcc }}
          platform: x64

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Setup Conan
        uses: ./.github/actions/setup-conan
        with:
          artifactory_api_key: ${{ secrets.ARTIFACTORY_API_KEY }}
          artifactory_repo: ${{ vars.ARTIFACTORY_REPO_URL }}
          artifactory_user: ${{ secrets.ARTIFACTORY_API_USER }}

      - name: Run Tests
        uses: ./.github/actions/run-tests
        with:
          conan-enabled: false

      - name: Build target
        uses: ./.github/actions/build-cmake-target
        with:
          target: toolbox
